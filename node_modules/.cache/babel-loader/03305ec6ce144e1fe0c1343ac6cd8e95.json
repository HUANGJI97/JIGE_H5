{"remainingRequest":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-2!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js!/Users/lianfangti/Project/UNI-APP/JIGE/src/pages/component/page/page.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/src/pages/component/page/page.vue","mtime":1568002261088},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-scoped-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  name: \"page\",\n  data: function data() {\n    return {\n      StatusBar: this.StatusBar,\n      CustomBar: this.CustomBar,\n      CUR_MP: this.CUR_MP,\n      tabbarOptions: {},\n      stack: [],\n      pagecount: 0\n    };\n  },\n  beforeMount: function beforeMount() {\n    // console.log(`调试:beforeMount`);\n    var pages = getCurrentPages(); // console.log(`调试:`, pages);\n\n    this.pagecount = pages.length;\n    this.tabbarOptions = this.tabbar; //   console.log(`调试:页面栈`, pages);\n    //\n    //   this.stack = pages;\n  },\n  methods: {\n    handleTabbarTap: function handleTabbarTap(item, index) {\n      // let {target: {dataset: {key, index}}} = e;\n      console.log(\"\\u8C03\\u8BD5:\", item);\n      var key = item.key,\n          type = item.type;\n\n      if (type === 'button') {\n        return 0; // 过滤类型为按钮的点击\n      }\n\n      index = parseInt(index);\n      this.tabbarOptions.index = index;\n      console.log(\"\\u8C03\\u8BD5:Tabbar\", this.tabbarOptions.pages[index]);\n      this.$emit(\"onTabbarChange\", {\n        key: key,\n        index: index\n      });\n      uni.vibrateShort(); // console.log(`调试:`, key)\n    },\n    handleTabbarActionTap: function handleTabbarActionTap(item) {\n      // console.log(`调试:Tabbar的Action按钮被点击`, e)\n      // item.loadding = !item.loadding ;\n      this.$emit('onTabbarActionTap', item);\n      uni.vibrateShort();\n    }\n  },\n  watch: {\n    'tabbar.pages': {\n      handler: function handler(val, newVal) {\n        console.log(\"\\u8C03\\u8BD5:\\u76D1\\u542C\\u5230\\u6570\\u636E\\u53D8\\u5316\\n\", JSON.stringify(val[1]), \"\\n\", JSON.stringify(newVal[1]));\n        this.tabbarOptions.pages = newVal; // console.log(`调试:`, this.tabbar.pages)\n      },\n      deep: true\n    },\n    'tabbar': {\n      handler: function handler(val, newVal) {\n        console.log(\"\\u8C03\\u8BD5:\\u76D1\\u542C\\u5230\\u6570\\u636E\\u53D8\\u5316\\n\", JSON.stringify(val[1]), \"\\n\", JSON.stringify(newVal[1]));\n        this.tabbarOptions = newVal; // console.log(`调试:`, this.tabbar.pages)\n      },\n      deep: true\n    }\n  },\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    isBack: {\n      type: Boolean,\n      default: false\n    },\n    bgColor: {\n      type: String,\n      default: undefined\n    },\n    showTabbar: {\n      type: Boolean,\n      default: false\n    },\n    tabbar: {\n      type: Object,\n      default: function _default() {\n        return {\n          index: 0,\n          pages: [{\n            key: 'home',\n            title: '首页',\n            type: 'page',\n            icon: 'homefill'\n          }, {\n            key: 'scan',\n            title: '扫码购物',\n            type: 'button',\n            icon: 'scan'\n          }, {\n            key: 'user',\n            title: '我的',\n            type: 'page',\n            icon: 'myfill'\n          }]\n        };\n      }\n    }\n  }\n};\nexports.default = _default2;",{"version":3,"sources":["page.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <view class=\"cu-page text-sm\">\n        <cu-custom bg-color=\"#387AFF\" title-color=\"white\"  :isBack=\"pagecount> 1\" v-if=\"CUR_MP==='mp-weixin'\">\n            <block slot=\"content\">{{title ||tabbarOptions.pages[tabbarOptions.index].title}}</block>\n        </cu-custom>\n        <view class=\"page-content \" :style=\"{height:'calc(100vh - ' + CustomBar + 'px)',backgroundColor:bgColor || ''}\">\n            <slot></slot>\n        </view>\n        <view v-if=\"showTabbar\" class=\"footer\">\n            <view class=\"cu-bar tabbar  \" style=\"background:#F7F7FA;\">\n\n                <view\n                        v-for=\"(item,index) in tabbarOptions.pages\"\n                        :key=\"index\"\n                        class=\"action \"\n                        :class=\"(index  === tabbarOptions.index ? 'text-blue' : 'text-gray') + ' '+(item.type === 'button' ? 'add-action' : '')\"\n                        @tap=\"handleTabbarTap(item,index)\"\n                >\n                    <button v-if=\"item.type==='button'\" class='cu-btn bg-blue shadow'\n                            :class=\"item.loadding ? 'cuIcon-loading animation-rotate' : item.icon\"\n                            @tap=\"handleTabbarActionTap(item)\"></button>\n                    <view v-else :class='\"cuIcon-\"+item.icon' :data-key=\"item.key\" :data-index=\"index\"\n                    ></view>\n                    {{item.title}}\n                </view>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script>\n    export default {\n        name: \"page\",\n        data() {\n            return {\n                StatusBar: this.StatusBar,\n                CustomBar: this.CustomBar,\n                CUR_MP:this.CUR_MP,\n                tabbarOptions: {},\n                stack: [],\n                pagecount: 0,\n\n            };\n        },\n\n        beforeMount() {\n            // console.log(`调试:beforeMount`);\n            let pages = getCurrentPages();\n            // console.log(`调试:`, pages);\n            this.pagecount = pages.length;\n            this.tabbarOptions = this.tabbar;\n\n\n            //   console.log(`调试:页面栈`, pages);\n            //\n            //   this.stack = pages;\n        },\n        methods: {\n            handleTabbarTap(item,index) {\n                // let {target: {dataset: {key, index}}} = e;\n                console.log(`调试:`,item);\n                let {key,type} = item;\n                if(type==='button'){\n                    return 0;// 过滤类型为按钮的点击\n                }\n                index = parseInt(index);\n                this.tabbarOptions.index = index;\n                console.log(`调试:Tabbar`,this.tabbarOptions.pages[index])\n                this.$emit(\"onTabbarChange\", {key, index});\n                uni.vibrateShort();\n                // console.log(`调试:`, key)\n            },\n            handleTabbarActionTap(item) {\n                // console.log(`调试:Tabbar的Action按钮被点击`, e)\n                // item.loadding = !item.loadding ;\n                this.$emit('onTabbarActionTap', item);\n                uni.vibrateShort();\n\n            }\n        },\n        watch: {\n            'tabbar.pages': {\n                handler: function (val, newVal) {\n                    console.log(`调试:监听到数据变化\\n`,JSON.stringify(val[1]), \"\\n\",JSON.stringify(newVal[1]))\n                    this.tabbarOptions.pages = newVal;\n\n                    // console.log(`调试:`, this.tabbar.pages)\n                },\n                deep: true\n            },\n            'tabbar': {\n                handler: function (val, newVal) {\n                    console.log(`调试:监听到数据变化\\n`,JSON.stringify(val[1]), \"\\n\",JSON.stringify(newVal[1]))\n                    this.tabbarOptions = newVal;\n\n                    // console.log(`调试:`, this.tabbar.pages)\n                },\n                deep: true\n            }\n\n        },\n        props: {\n            title: {\n                type: String,\n                default: ''\n            },\n            isBack: {\n                type: Boolean,\n                default: false,\n            },\n            bgColor: {\n                type: String,\n                default: undefined\n            },\n            showTabbar: {\n                type: Boolean,\n                default: false\n            },\n            tabbar: {\n                type: Object,\n                default() {\n                    return {\n                        index: 0,\n                        pages: [\n                            {\n                                key: 'home',\n                                title: '首页',\n                                type: 'page',\n                                icon: 'homefill',\n                            }, {\n                                key: 'scan',\n                                title: '扫码购物',\n                                type: 'button',\n                                icon: 'scan',\n                            }, {\n                                key: 'user',\n                                title: '我的',\n                                type: 'page',\n                                icon: 'myfill',\n                            }\n                        ]\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped scoped>\n    .page-content {\n        /*overflow-y: scroll;*/\n    }\n\n    .footer {\n        position: fixed;\n        bottom: 0px;\n        width: 100%;\n        z-index: 999;\n\n    }\n\n    .add-action::after {\n        box-shadow: none;\n    }\n\n    .animation-rotate {\n        -webkit-animation: rotate .8s linear infinite;\n    }\n\n    @-webkit-keyframes rotate {\n\n        0% {\n            -webkit-transform: rotate(0deg);\n        }\n\n        100% {\n            -webkit-transform: rotate(360deg);\n        }\n\n    }\n</style>\n"],"sourceRoot":"src/pages/component/page"}]}