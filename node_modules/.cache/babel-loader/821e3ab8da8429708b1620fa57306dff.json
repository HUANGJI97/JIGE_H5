{"remainingRequest":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/thread-loader/dist/cjs.js!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-3!/Users/lianfangti/Project/UNI-APP/JIGE/src/utils/HttpRequest.js","dependencies":[{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/src/utils/HttpRequest.js","mtime":1564387610061},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lianfangti/Project/UNI-APP/JIGE/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Request 0.0.5\n * @Class uni-app request网络请求库\n * @Author lu-ch\n * @Date 2019-06-05\n * @Email webwork.s@qq.com\n * **/\nvar Request =\n/*#__PURE__*/\nfunction () {\n  function Request() {\n    _classCallCheck(this, Request);\n\n    _defineProperty(this, \"config\", {\n      baseUrl: '',\n      header: {\n        'Content-Type': 'application/json;charset=UTF-8'\n      },\n      method: 'GET',\n      dataType: 'json',\n      responseType: 'text',\n      success: function success() {},\n      fail: function fail() {},\n      complete: function complete() {}\n    });\n\n    _defineProperty(this, \"interceptor\", {\n      request: function request(f) {\n        if (f) {\n          Request.requestBeforeFun = f;\n        }\n      },\n      response: function response(f) {\n        if (f) {\n          Request.requestComFun = f;\n        }\n      }\n    });\n  }\n\n  _createClass(Request, [{\n    key: \"setConfig\",\n    value: function setConfig(f) {\n      this.config = f(this.config);\n    }\n  }, {\n    key: \"request\",\n    value: function request() {\n      var _this = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.baseUrl = options.baseUrl || this.config.baseUrl;\n      options.dataType = options.dataType || this.config.dataType;\n      options.url = Request.posUrl(options.url) ? options.url : options.baseUrl + options.url;\n      options.data = options.data || {};\n      options.header = options.header || this.config.header;\n      options.method = options.method || this.config.method;\n      return new Promise(function (resolve, reject) {\n        var next = true;\n        var _config = null;\n\n        options.complete = function (response) {\n          var statusCode = response.statusCode;\n          response.config = _config;\n          response = Request.requestComFun(response);\n\n          if (statusCode === 200) {\n            // 成功\n            resolve(response);\n          } else {\n            reject(response);\n          }\n        };\n\n        var cancel = function cancel() {\n          var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'handle cancel';\n          var err = {\n            errMsg: t,\n            config: afC\n          };\n          reject(err);\n          next = false;\n        };\n\n        var afC = _objectSpread({}, _this.config, options);\n\n        _config = _objectSpread({}, afC, Request.requestBeforeFun(afC, cancel));\n        console.log(\"\\u8C03\\u8BD5:\\u8F93\\u51FA_config\", _config);\n        if (!next) return;\n        uni.request(_config);\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (url.url) {\n        options = url;\n      } else {\n        options.url = url;\n        options.data = data;\n      }\n\n      options.method = 'GET';\n      return this.request(options);\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (url.url) {\n        options = url;\n      } else {\n        options.url = url;\n        options.data = data;\n      }\n\n      options.method = 'POST';\n      return this.request(options);\n    }\n  }], [{\n    key: \"posUrl\",\n    value: function posUrl(url) {\n      /* 判断url是否为绝对路径 */\n      return /(http|https):\\/\\/([\\w.]+\\/?)\\S*/.test(url);\n    }\n  }, {\n    key: \"requestBeforeFun\",\n    value: function requestBeforeFun(config) {\n      return config;\n    }\n  }, {\n    key: \"requestComFun\",\n    value: function requestComFun(response) {\n      return response;\n    }\n  }]);\n\n  return Request;\n}();\n\nexports.default = Request;",{"version":3,"sources":["/Users/lianfangti/Project/UNI-APP/JIGE/src/utils/HttpRequest.js"],"names":["Request","baseUrl","header","method","dataType","responseType","success","fail","complete","request","f","requestBeforeFun","response","requestComFun","config","options","url","posUrl","data","Promise","resolve","reject","next","_config","statusCode","cancel","t","err","errMsg","afC","console","log","uni","test"],"mappings":"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","sourcesContent":["/**\n * Request 0.0.5\n * @Class uni-app request网络请求库\n * @Author lu-ch\n * @Date 2019-06-05\n * @Email webwork.s@qq.com\n * **/\nexport default class Request {\n  config = {\n    baseUrl: '',\n    header: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    method: 'GET',\n    dataType: 'json',\n    responseType: 'text',\n    success () {\n    },\n    fail () {\n    },\n    complete () {\n    }\n  }\n\n  static posUrl (url) { /* 判断url是否为绝对路径 */\n    return /(http|https):\\/\\/([\\w.]+\\/?)\\S*/.test(url)\n  }\n\n  interceptor = {\n    request (f) {\n      if (f) {\n        Request.requestBeforeFun = f\n      }\n    },\n    response (f) {\n      if (f) {\n        Request.requestComFun = f\n      }\n    }\n  }\n\n  static requestBeforeFun (config) {\n    return config\n  }\n\n  static requestComFun (response) {\n    return response\n  }\n\n  setConfig (f) {\n    this.config = f(this.config)\n  }\n\n  request (options = {}) {\n    options.baseUrl = options.baseUrl || this.config.baseUrl\n    options.dataType = options.dataType || this.config.dataType\n    options.url = Request.posUrl(options.url) ? options.url : (options.baseUrl + options.url)\n    options.data = options.data || {}\n    options.header = options.header || this.config.header\n    options.method = options.method || this.config.method\n    return new Promise((resolve, reject) => {\n      let next = true\n      let _config = null\n      options.complete = (response) => {\n        let statusCode = response.statusCode\n        response.config = _config\n        response = Request.requestComFun(response)\n        if (statusCode === 200) { // 成功\n          resolve(response)\n        } else {\n          reject(response)\n        }\n      }\n      let cancel = (t = 'handle cancel') => {\n        let err = {\n          errMsg: t,\n          config: afC\n        }\n        reject(err)\n        next = false\n      }\n      let afC = { ...this.config, ...options }\n      _config = { ...afC, ...Request.requestBeforeFun(afC, cancel) }; \n      console.log(`调试:输出_config`, _config);\n      if (!next) return\n      uni.request(_config)\n    })\n  }\n\n  get (url, data, options = {}) {\n    if(url.url){\n      options = url\n    }else{\n      options.url = url\n      options.data = data\n    }\n    options.method = 'GET'\n    return this.request(options)\n  }\n\n  post (url, data, options = {}) {\n    if(url.url){\n      options = url\n    }else{\n      options.url = url;\n      options.data = data\n    }\n    options.method = 'POST';\n    return this.request(options)\n  }\n}\n"]}]}